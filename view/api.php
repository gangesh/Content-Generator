<?php
// Set these to force the download
// $filename = 'wordpress-demo.' . date( 'Y-m-d' ) . '.xml';
// header( 'Content-Description: File Transfer' );
// header( 'Content-Disposition: attachment; filename=' . $filename );

// Set XML header
header( 'Content-Type: text/xml; charset=' . get_option( 'blog_charset' ), true );

$api = Demo_Gen_API::get_instance();

if ( ! isset( $_REQUEST['from'] ) ) {
	wp_die( 'No content source was defined.' );
}

$wiki_cat = $_REQUEST['from'];
$pexel_cat = isset( $_REQUEST['images-from'] ) ? $_REQUEST['images-from']: $wiki_cat;
$add_image = $api->parse_image_chance( $_REQUEST );

// Collect our post type counts
global $post_types;
$post_types = array();

// Use default post types
foreach ( get_post_types( array( 'public' => true ) ) as $post_type ){
	if ( isset( $_REQUEST[ $post_type ] ) ) {
		$post_types[ $post_type ] = $_REQUEST[ $post_type ];
	}
}

$total_articles = array_sum( $post_types );

// Pull articles
$article_list = $api->get_article_list( $wiki_cat, $total_articles );
if ( is_wp_error( $article_list ) ) {
	wp_die( $article_list->get_error_message() );
}

// Un-alphabetize the list
shuffle( $article_list );

if ( count( $article_list ) < $total_articles ) {
	DCG::warning( sprintf( __( "Only %s articles were found in this category.", 'demo-gen' ), count( $article_list ) ) );
}

// Pull images
$image_list = array();
if ( 0 !== $add_image ) {
	$image_list = $api->get_image_list( $pexel_cat, $total_articles );
	if ( is_wp_error( $image_list ) ){
		DCG::warning( $image_list->get_error_message() );
	}
}

echo '<?xml version="1.0" encoding="' . get_bloginfo('charset') . "\" ?>\n";
?>

<!-- This is a WordPress eXtended RSS file generated by [?]. -->
<!-- It contains demo content generated from [] and []. -->

<?php the_generator( 'export' ); ?>

<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/<?php echo WXR_VERSION; ?>/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/<?php echo WXR_VERSION; ?>/"
>

<channel>
<?php foreach ( $article_list as $title ) : ?>
<?php
		foreach ( $post_types as $post_type => $count ) {
			if ( $count > 0 ) {
				$post_types[ $post_type ]--;
				break;
			}
		}
		$post = DCG::get_post_from_article_title( $post_type, $title, $image_list );
	?>
	<item>
		<title><?php echo apply_filters( 'the_title_rss', $post['post_title'] ); ?></title>
	</item>
<?php endforeach; ?>
</channel>
</rss>
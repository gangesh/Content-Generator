<?php
// Set these to force the download
// $filename = 'wordpress-demo.' . date( 'Y-m-d' ) . '.xml';
// header( 'Content-Description: File Transfer' );
// header( 'Content-Disposition: attachment; filename=' . $filename );

// Set XML header
header( 'Content-Type: text/xml; charset=' . get_option( 'blog_charset' ), true );

$api = Demo_Gen_API::get_instance();

if ( ! isset( $_REQUEST['from'] ) ) {
	wp_die( 'No content source was defined.' );
}

$wiki_cat = $_REQUEST['from'];
$pexel_cat = isset( $_REQUEST['images-from'] ) ? $_REQUEST['images-from']: $wiki_cat;
$add_image = $api->parse_image_chance( $_REQUEST );

// Collect our post type counts
global $post_types;
$post_types = array();

// Use default post types
foreach ( get_post_types( array( 'public' => true ) ) as $post_type ){
	if ( isset( $_REQUEST[ $post_type ] ) ) {
		$post_types[ $post_type ] = $_REQUEST[ $post_type ];
	}
}

$total_articles = array_sum( $post_types );

// Pull articles
$article_list = $api->get_article_list( $wiki_cat, $total_articles );
if ( is_wp_error( $article_list ) ) {
	wp_die( $article_list->get_error_message() );
}

// Un-alphabetize the list
shuffle( $article_list );

if ( count( $article_list ) < $total_articles ) {
	DCG::warning( sprintf( __( "Only %s articles were found in this category.", 'demo-gen' ), count( $article_list ) ) );
}

// Pull images
$image_list = array();
if ( 0 !== $add_image ) {
	$image_list = $api->get_image_list( $pexel_cat, $total_articles );
	if ( is_wp_error( $image_list ) ){
		DCG::warning( $image_list->get_error_message() );
	}
}

// Assign IDs and images to posts
$unique_post_id = 1;
$articles = $images = $attached = array();
foreach ( $article_list as $title ) {
	$articles[ $unique_post_id ] = $title;
	if ( ( ! is_wp_error( $image_list ) ) && ( mt_rand( 0, 100 ) <= $add_image ) ) {
		$key = array_rand( $image_list );
		$attached[ $unique_post_id ] = $unique_post_id + 1;
		$unique_post_id++;
		$images[ $unique_post_id ] = $image_list[ $key ];
		unset( $image_list[ $key ] );
	}
	$unique_post_id++;
}

// Collect the cats
$categories = array();

echo '<?xml version="1.0" encoding="' . get_bloginfo('charset') . "\" ?>\n";
?>

<!-- This is a WordPress eXtended RSS file generated by [?]. -->
<!-- It contains demo content generated from [] and []. -->

<?php the_generator( 'export' ); ?>

<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/<?php echo WXR_VERSION; ?>/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/<?php echo WXR_VERSION; ?>/"
>

<channel>
	<title>Demo Content From <?php echo $wiki_cat; ?></title>
	<wp:wxr_version><?php echo WXR_VERSION; ?></wp:wxr_version>
	<wp:base_site_url><?php echo $api->REPLACE_URL; ?></wp:base_site_url>
	<wp:base_blog_url><?php echo $api->REPLACE_URL; ?></wp:base_blog_url>

<?php foreach ( $articles as $post_id => $title ) :
	foreach ( $post_types as $post_type => $count ) {
		if ( $count > 0 ) {
			$post_types[ $post_type ]--;
			break;
		}
	}
	$post = DCG::get_post_from_article_title( $post_type, $title, $image_list );
	$categories += $post['post_category'];
?>
	<item>
		<title><?php echo apply_filters( 'the_title_rss', $post['post_title'] ); ?></title>
		<link>http://example.com</link>
		<pubDate><?php echo mysql2date( 'D, d M Y H:i:s +0000', $post['post_date'], false ); ?></pubDate>
		<dc:creator><?php echo dcg_wxr_cdata( $post['post_author'] ); ?></dc:creator>
		<guid isPermaLink="false"><?php echo $post['guid']; ?></guid>
		<description></description>
		<content:encoded><?php echo dcg_wxr_cdata( apply_filters( 'the_content_export', $post['post_content'] ) ); ?></content:encoded>
		<excerpt:encoded><?php echo dcg_wxr_cdata( apply_filters( 'the_excerpt_export', $post['post_excerpt'] ) ); ?></excerpt:encoded>
		<wp:post_id><?php echo $post_id; ?></wp:post_id>
		<wp:post_date><?php echo $post['post_date']; ?></wp:post_date>
		<wp:post_date_gmt><?php echo $post['post_date_gmt']; ?></wp:post_date_gmt>
		<wp:comment_status><?php echo $post['comment_status']; ?></wp:comment_status>
		<wp:ping_status><?php echo $post['ping_status']; ?></wp:ping_status>
		<wp:post_name><?php echo $post['post_name']; ?></wp:post_name>
		<wp:status><?php echo $post['post_status']; ?></wp:status>
		<wp:post_parent><?php echo $post['post_parent']; ?></wp:post_parent>
		<wp:menu_order><?php echo $post['menu_order']; ?></wp:menu_order>
		<wp:post_type><?php echo $post['post_type']; ?></wp:post_type>
		<wp:post_password><?php echo $post['post_password']; ?></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
<?php
		foreach ( $post['post_category'] as $cat ) {
			printf( "\t\t<category domain=\"category\" nicename=\"%s\">%s</category>\n",
				sanitize_title( $cat ),
				dcg_wxr_cdata( $cat )
			);
		}
?>
<?php if ( isset( $attached[ $post_id ] ) ) : ?>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><?php echo '<![CDATA[' . absint( $attached[ $post_id ] ) . ']]>'; ?></wp:meta_value>
		</wp:postmeta>
<?php endif; ?>
	</item>
<?php
endforeach;

foreach ( $images as $post_id => $image ) :
	$title = preg_replace('/\.[^.]+$/', '', basename( $image ) );
	$gmt_date = $api->random_date();
?>
	<item>
		<title><?php echo apply_filters( 'the_title_rss', $title ); ?></title>
		<link>http://example.com</link>
		<pubDate><?php echo mysql2date( 'D, d M Y H:i:s +0000', $gmt_date, false ); ?></pubDate>
		<dc:creator>demouser</dc:creator>
		<guid isPermaLink="false"><?php echo $image; ?></guid>
		<description></description>
		<content:encoded></content:encoded>
		<excerpt:encoded></excerpt:encoded>
		<wp:post_id><?php echo $post_id; ?></wp:post_id>
		<wp:post_date_gmt><?php echo $gmt_date; ?></wp:post_date_gmt>
		<wp:post_date><?php echo get_date_from_gmt( $gmt_date ); ?></wp:post_date>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name><?php echo sanitize_title( $title ); ?></wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent><?php echo array_search( $post_id, $attached ); ?></wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password>''</wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><?php echo $image ?></wp:attachment_url>
	</item>
<?php
endforeach;

$unique_term_id = 1;
$categories = array_unique( $categories );
foreach ( $categories as $cat ) {
	dcg_wxr_category( $cat, $unique_term_id );
	$unique_term_id++;
} ?>

</channel>
</rss>
